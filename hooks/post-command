#!/bin/bash
set -euo pipefail

if [[ "${BUILDKITE_PLUGIN_INCREMENTAL_CACHE_DEBUG:-false}" =~ (true|on|1) ]]; then
  set -x
fi

if [ ${BUILDKITE_COMMAND_EXIT_STATUS} -ne 0 ]; then
  echo "~~~ Cache is skipped because step returned ${BUILDKITE_COMMAND_EXIT_STATUS}"
  exit 0
fi

if [[ -n "${BUILDKITE_PLUGIN_INCREMENTAL_CACHE_KEY:-}" ]]; then
  AWS_ARGS=""

  if [[ -n "${BUILDKITE_PLUGIN_INCREMENTAL_CACHE_S3_PROFILE:-}" ]]; then
    AWS_ARGS="--profile ${BUILDKITE_PLUGIN_INCREMENTAL_CACHE_S3_PROFILE}"
  fi

  cache_key_prefix=$(echo "$BUILDKITE_PLUGIN_INCREMENTAL_CACHE_KEY" | sed -e 's/{.*//')
  template_value=$(echo "$BUILDKITE_PLUGIN_INCREMENTAL_CACHE_KEY" | sed -e 's/^[^\{{]*[^A-Za-z]*//' -e 's/.}}.*$//' | tr -d \' | tr -d \")

  if [[ $template_value == *"checksum"* ]]; then
    if [[ "$OSTYPE" == "linux-gnu" ]]; then
      function=${template_value/"checksum"/"sha1sum"}
    elif [[ "$OSTYPE" == "darwin"* ]]; then
      # fallback to shasum
      function=${template_value/"checksum"/"shasum"}
    # elif [[ "$OSTYPE" == "win32" ]]; then # for further usage
    else
      # fallback to sha1sum
      function=${template_value/"checksum"/"sha1sum"}
    fi
    result=$($function | awk '{print $1}')
    cache_key="$cache_key_prefix$result"
  else
    cache_key=$BUILDKITE_PLUGIN_INCREMENTAL_CACHE_KEY
  fi

  paths=()

  if [[ -n "${BUILDKITE_PLUGIN_INCREMENTAL_CACHE_PATHS:-}" ]]; then
    paths+=("$BUILDKITE_PLUGIN_INCREMENTAL_CACHE_PATHS")
  fi

  while IFS='=' read -r path _; do
    if [[ $path =~ ^(BUILDKITE_PLUGIN_INCREMENTAL_CACHE_PATHS_[0-9]+) ]]; then
      paths+=("${!path}")
    fi
  done < <(env | sort)

  echo ":aws: :amazon-s3: Save cache: ${paths[*]}"

  tar_file="${cache_key}.tar"
  zip_file="${tar_file}.gz"

  if [ ! -f "$tar_file" ]; then
    tar -cf "${tar_file}" "${paths[@]}"
    gzip "${tar_file}"
  fi
  aws s3 cp "${zip_file}" "s3://${BUILDKITE_PLUGIN_INCREMENTAL_CACHE_S3_BUCKET_NAME}/${zip_file}" $AWS_ARGS
  rm -f "${zip_file}"
else
  echo "~~~ Cache is skipped because no cache key provided"
  exit 0
fi
